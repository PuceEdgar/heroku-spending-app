{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/MaterialUITable.js\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nexport default function MaterialTableDemo(props) {\n  const {\n    name,\n    items\n  } = props;\n  const [data, setData] = React.useState([]); //table data\n\n  React.useEffect(() => {\n    return () => {\n      setData(items);\n    };\n  }, []);\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"ID\",\n      field: \"id\"\n    }, {\n      title: \"Type\",\n      field: \"type\"\n    }, {\n      title: \"Place\",\n      field: \"place\"\n    }, {\n      title: \"Amount\",\n      field: \"amount\",\n      type: \"numeric\"\n    }]\n  });\n  items.map((item, i) => {\n    return state.data.push(item);\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    options: {\n      search: false\n    },\n    title: name,\n    columns: state.columns,\n    data: data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/MaterialUITable.js"],"names":["React","MaterialTable","MaterialTableDemo","props","name","items","data","setData","useState","useEffect","state","setState","columns","title","field","type","map","item","i","push","search","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaterialTable from \"material-table\";\n\nexport default function MaterialTableDemo(props) {\n  const { name, items } = props;\n\n  const [data, setData] = React.useState([]); //table data\n\n  React.useEffect(() => {\n    return () => {\n      setData(items);\n    };\n  }, []);\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"ID\", field: \"id\" },\n      { title: \"Type\", field: \"type\" },\n      { title: \"Place\", field: \"place\" },\n      { title: \"Amount\", field: \"amount\", type: \"numeric\" },\n    ],\n  });\n\n  items.map((item, i) => {\n    return state.data.push(item);\n  });\n  return (\n    <MaterialTable\n      options={{\n        search: false,\n      }}\n      title={name}\n      columns={state.columns}\n      data={data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}