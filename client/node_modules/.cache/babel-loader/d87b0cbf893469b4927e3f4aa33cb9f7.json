{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { GetTotal } from \"../Utilities/Total\";\nimport ModalWindow from \"../Components/ModalWindow\";\n\nfunction DayTable(props) {\n  const {\n    items\n  } = props;\n  const tableRows = items.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, item.type), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, item.place), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, item.amount));\n  });\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Place\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, tableRows));\n}\n\nfunction Table(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    weeks: weeks,\n    items: items,\n    selectedMonth: selectedMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n  const weekTotal = /*#__PURE__*/React.createElement(\"th\", {\n    className: \"align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Week total\");\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      className: \"align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, moment().isoWeekday([i]).format(\"ddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  weekdayNames.push(weekTotal);\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, weekdayNames));\n}\n\nfunction TableBody(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  const spendingMonth = items.filter((item, i) => {\n    return new Date(item.date).getMonth() === selectedMonth.month();\n  });\n  let monthSpending = 0;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, item => typeof item === \"undefined\" ? \"\" : item);\n    let weekSpending = 0;\n    const td = week.map((day, i) => {\n      const daySpending = spendingMonth.filter((item, i) => {\n        return moment(item.date).date() === day;\n      });\n      const totalPerDay = GetTotal(daySpending);\n      weekSpending += totalPerDay;\n      monthSpending += totalPerDay;\n\n      if (totalPerDay > 0) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"align-middle text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ModalWindow, {\n          buttonName: day,\n          headerName: `Total spent: ${totalPerDay}`,\n          classDescription: \"btn btn-warning btn-block text-dark\",\n          bodyComponent: /*#__PURE__*/React.createElement(DayTable, {\n            items: daySpending,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 30\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"align-middle text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 16\n          }\n        }, day);\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, td, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, weekSpending));\n  });\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, rows, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"12\",\n    className: \"align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"Total this month: \", monthSpending)));\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  // const { items } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n  const [items, setItems] = useState([]);\n\n  function getData() {\n    fetch(\"http://localhost:9000/getitems\").then(res => res.json()).then(res => {\n      const sortedActivities = res.sort((a, b) => new Date(b.date) - new Date(a.date));\n      setItems(sortedActivities);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row container m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadPreviousMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, selectedMonth.format(\"MMMM\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadNextMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"Next\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    weeks: weeks,\n    selectedMonth: selectedMonth,\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DisplayCalendar;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","useState","useEffect","moment","GetTotal","ModalWindow","DayTable","props","items","tableRows","map","item","i","type","place","amount","Table","weeks","selectedMonth","TableHead","weekdayNames","weekTotal","weekday","isoWeekday","format","push","TableBody","spendingMonth","filter","Date","date","getMonth","month","monthSpending","rows","week","Array","from","weekSpending","td","day","daySpending","totalPerDay","GetWeeksOfMonth","dayCount","daysInMonth","index","d","undefined","DisplayCalendar","setMonth","setWeeks","setItems","getData","fetch","then","res","json","sortedActivities","sort","a","b","loadNextMonth","nextMonth","add","loadPreviousMonth","previousMonth","subtract"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { GetTotal } from \"../Utilities/Total\";\nimport ModalWindow from \"../Components/ModalWindow\";\n\nfunction DayTable(props) {\n  const { items } = props;\n\n  const tableRows = items.map((item, i) => {\n    return (\n      <tr key={i}>\n        <td>{item.type}</td>\n        <td>{item.place}</td>\n        {/* <td>{item.date}</td> */}\n        <td>{item.amount}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Type</th>\n          <th scope=\"col\">Place</th>\n          {/* <th scope=\"col\">Date</th> */}\n          <th scope=\"col\">Amount</th>\n        </tr>\n      </thead>\n      <tbody>{tableRows}</tbody>\n    </table>\n  );\n}\n\nfunction Table(props) {\n  const { weeks, items, selectedMonth } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHead />\n      <TableBody weeks={weeks} items={items} selectedMonth={selectedMonth} />\n    </table>\n  );\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n  const weekTotal = <th className=\"align-middle text-center\">Week total</th>;\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = (\n      <th key={i} className=\"align-middle text-center\">\n        {moment().isoWeekday([i]).format(\"ddd\")}\n      </th>\n    );\n    weekdayNames.push(weekday);\n  }\n  weekdayNames.push(weekTotal);\n\n  return (\n    <thead>\n      <tr>{weekdayNames}</tr>\n    </thead>\n  );\n}\n\nfunction TableBody(props) {\n  const { weeks, items, selectedMonth } = props;\n\n  const spendingMonth = items.filter((item, i) => {\n    return new Date(item.date).getMonth() === selectedMonth.month();\n  });\n\n  let monthSpending = 0;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, (item) =>\n      typeof item === \"undefined\" ? \"\" : item\n    );\n    let weekSpending = 0;\n    const td = week.map((day, i) => {\n      const daySpending = spendingMonth.filter((item, i) => {\n        return moment(item.date).date() === day;\n      });\n\n      const totalPerDay = GetTotal(daySpending);\n      weekSpending += totalPerDay;\n      monthSpending += totalPerDay;\n      if (totalPerDay > 0) {\n        return (\n          <td className=\"align-middle text-center\">\n            <ModalWindow\n              buttonName={day}\n              headerName={`Total spent: ${totalPerDay}`}\n              classDescription=\"btn btn-warning btn-block text-dark\"\n              bodyComponent={<DayTable items={daySpending} />}\n            />\n          </td>\n        );\n      } else {\n        return <td className=\"align-middle text-center\">{day}</td>;\n      }\n    });\n\n    return (\n      <tr>\n        {td}\n        <td className=\"align-middle text-center\">{weekSpending}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <tbody>\n      {rows}\n      <tr>\n        <td colSpan=\"12\" className=\"align-middle text-center\">\n          Total this month: {monthSpending}\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  // const { items } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n  const [items, setItems] = useState([]);\n\n  function getData() {\n    fetch(\"http://localhost:9000/getitems\")\n      .then((res) => res.json())\n      .then((res) => {\n        const sortedActivities = res.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        setItems(sortedActivities);\n      });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return (\n    <div className=\"container border\">\n      <div className=\"row container m-3\">\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadPreviousMonth(selectedMonth)}\n          >\n            Previous\n          </button>\n        </div>\n        <div className=\"col-6 text-center\">\n          <h4 className=\"text-middle\">{selectedMonth.format(\"MMMM\")}</h4>\n        </div>\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadNextMonth(selectedMonth)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n      <div>\n        <Table weeks={weeks} selectedMonth={selectedMonth} items={items} />\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayCalendar;\n"]},"metadata":{},"sourceType":"module"}