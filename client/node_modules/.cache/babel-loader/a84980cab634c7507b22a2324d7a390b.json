{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const {\n    weeks\n  } = props;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    weeks: weeks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      className: \"align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, moment().weekday([i]).format(\"ddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, weekdayNames));\n}\n\nfunction TableBody(props) {\n  const {\n    weeks\n  } = props;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, item => typeof item === \"undefined\" ? \"\" : item);\n    const td = week.map((day, i) => {\n      //   console.log(\"day: \" + day);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: \"align-middle text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      }, day);\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, td);\n  }); //   console.log(\"rows\" + rows);\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }\n  }, rows);\n}\n\nfunction GetDayName(num) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, moment().date(num).format(\"dddd\"));\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).day();\n\n    if (week[6] !== undefined) {\n      weeks.push(week);\n      week = new Array(7);\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayMoment() {\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row container m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadPreviousMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Previos\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, selectedMonth.format(\"MMMM\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadNextMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Next\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    weeks: weeks,\n    selectedMonth: selectedMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DisplayMoment;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","useEffect","useState","moment","Table","props","weeks","TableHead","weekdayNames","i","weekday","format","push","TableBody","rows","map","week","Array","from","item","td","day","GetDayName","num","date","GetWeeksOfMonth","month","dayCount","daysInMonth","index","d","undefined","DisplayMoment","selectedMonth","setMonth","setWeeks","loadNextMonth","nextMonth","add","loadPreviousMonth","previousMonth","subtract"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const { weeks } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHead />\n      <TableBody weeks={weeks} />\n    </table>\n  );\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = (\n      <th key={i} className=\"align-middle text-center\">\n        {moment().weekday([i]).format(\"ddd\")}\n      </th>\n    );\n    weekdayNames.push(weekday);\n  }\n\n  return (\n    <thead>\n      <tr>{weekdayNames}</tr>\n    </thead>\n  );\n}\n\nfunction TableBody(props) {\n  const { weeks } = props;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, (item) =>\n      typeof item === \"undefined\" ? \"\" : item\n    );\n    const td = week.map((day, i) => {\n      //   console.log(\"day: \" + day);\n      return <td className=\"align-middle text-center\">{day}</td>;\n    });\n\n    return <tr>{td}</tr>;\n  });\n\n  //   console.log(\"rows\" + rows);\n  return <tbody>{rows}</tbody>;\n}\n\nfunction GetDayName(num) {\n  return <span>{moment().date(num).format(\"dddd\")}</span>;\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).day();\n    if (week[6] !== undefined) {\n      weeks.push(week);\n      week = new Array(7);\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayMoment() {\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return (\n    <div className=\"container border\">\n      <div className=\"row container m-3\">\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadPreviousMonth(selectedMonth)}\n          >\n            Previos\n          </button>\n        </div>\n        <div className=\"col-6 text-center\">\n          <h4 className=\"text-middle\">{selectedMonth.format(\"MMMM\")}</h4>\n        </div>\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadNextMonth(selectedMonth)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n      <div>\n        <Table weeks={weeks} selectedMonth={selectedMonth} />\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayMoment;\n"]},"metadata":{},"sourceType":"module"}