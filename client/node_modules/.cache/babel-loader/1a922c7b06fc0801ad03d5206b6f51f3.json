{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/MaterialUI/CustomToolbar.js\";\n\n/* eslint-disable no-unused-vars */\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport classNames from \"classnames\";\nimport { CsvBuilder } from \"filefy\";\nimport PropTypes, { oneOf } from \"prop-types\";\nimport \"jspdf-autotable\";\nimport * as React from \"react\";\nconst jsPDF = typeof window !== \"undefined\" ? require(\"jspdf\").jsPDF : null;\n/* eslint-enable no-unused-vars */\n\nexport class CustomMTableToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSearchChange = searchText => {\n      this.props.dataManager.changeSearchText(searchText);\n      this.setState({\n        searchText\n      }, this.props.onSearchChanged(searchText));\n    };\n\n    this.getTableData = () => {\n      const columns = this.props.columns.filter(columnDef => (!columnDef.hidden || columnDef.export === true) && columnDef.export !== false && columnDef.field).sort((a, b) => a.tableData.columnOrder > b.tableData.columnOrder ? 1 : -1);\n      const data = (this.props.exportAllData ? this.props.data : this.props.renderData).map(rowData => columns.map(columnDef => this.props.getFieldValue(rowData, columnDef)));\n      return [columns, data];\n    };\n\n    this.defaultExportCsv = () => {\n      const [columns, data] = this.getTableData();\n      let fileName = this.props.title || \"data\";\n\n      if (this.props.exportFileName) {\n        fileName = typeof this.props.exportFileName === \"function\" ? this.props.exportFileName() : this.props.exportFileName;\n      }\n\n      const builder = new CsvBuilder(fileName + \".csv\");\n      builder.setDelimeter(this.props.exportDelimiter).setColumns(columns.map(columnDef => columnDef.title)).addRows(data).exportFile();\n    };\n\n    this.defaultExportPdf = () => {\n      if (jsPDF !== null) {\n        const [columns, data] = this.getTableData();\n        let content = {\n          startY: 50,\n          head: [columns.map(columnDef => columnDef.title)],\n          body: data\n        };\n        const unit = \"pt\";\n        const size = \"A4\";\n        const orientation = \"landscape\";\n        const doc = new jsPDF(orientation, unit, size);\n        doc.setFontSize(15);\n        doc.text(this.props.exportFileName || this.props.title, 40, 40);\n        doc.autoTable(content);\n        doc.save((this.props.exportFileName || this.props.title || \"data\") + \".pdf\");\n      }\n    };\n\n    this.exportCsv = () => {\n      if (this.props.exportCsv) {\n        this.props.exportCsv(this.props.columns, this.props.data);\n      } else {\n        this.defaultExportCsv();\n      }\n\n      this.setState({\n        exportButtonAnchorEl: null\n      });\n    };\n\n    this.exportPdf = () => {\n      if (this.props.exportPdf) {\n        this.props.exportPdf(this.props.columns, this.props.data);\n      } else {\n        this.defaultExportPdf();\n      }\n\n      this.setState({\n        exportButtonAnchorEl: null\n      });\n    };\n\n    this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null,\n      searchText: props.searchText\n    };\n  }\n\n  renderSearch() {\n    const localization = { ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization\n    };\n\n    if (this.props.search) {\n      return /*#__PURE__*/React.createElement(TextField, {\n        autoFocus: this.props.searchAutoFocus,\n        className: this.props.searchFieldAlignment === \"left\" && this.props.showTitle === false ? null : this.props.classes.searchField,\n        value: this.state.searchText,\n        onChange: event => this.onSearchChange(event.target.value),\n        placeholder: localization.searchPlaceholder,\n        variant: this.props.searchFieldVariant,\n        InputProps: {\n          startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"start\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            title: localization.searchTooltip,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(this.props.icons.Search, {\n            fontSize: \"small\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }\n          }))),\n          endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n            position: \"end\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            disabled: !this.state.searchText,\n            onClick: () => this.onSearchChange(\"\"),\n            \"aria-label\": localization.clearSearchAriaLabel,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(this.props.icons.ResetSearch, {\n            fontSize: \"small\",\n            \"aria-label\": \"clear\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }\n          }))),\n          style: this.props.searchFieldStyle,\n          inputProps: {\n            \"aria-label\": localization.searchAriaLabel\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderDefaultActions() {\n    const localization = { ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization\n    };\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }\n    }, this.props.columnsButton && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: localization.showColumnsTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: event => this.setState({\n        columnsButtonAnchorEl: event.currentTarget\n      }),\n      \"aria-label\": localization.showColumnsAriaLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(this.props.icons.ViewColumn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: this.state.columnsButtonAnchorEl,\n      open: Boolean(this.state.columnsButtonAnchorEl),\n      onClose: () => this.setState({\n        columnsButtonAnchorEl: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"text\",\n      disabled: true,\n      style: {\n        opacity: 1,\n        fontWeight: 600,\n        fontSize: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, localization.addRemoveColumns), this.props.columns.map(col => {\n      if (!col.hidden || col.hiddenByColumnsButton) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: col.tableData.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MenuItem, {\n          className: classes.formControlLabel,\n          component: \"label\",\n          htmlFor: `column-toggle-${col.tableData.id}`,\n          disabled: col.removable === false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          checked: !col.hidden,\n          id: `column-toggle-${col.tableData.id}`,\n          onChange: () => this.props.onColumnsChanged(col, !col.hidden),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }\n        }, col.title)));\n      }\n\n      return null;\n    }))), this.props.exportButton && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: localization.exportTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      onClick: event => this.setState({\n        exportButtonAnchorEl: event.currentTarget\n      }),\n      \"aria-label\": localization.exportAriaLabel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(this.props.icons.Export, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Menu, {\n      anchorEl: this.state.exportButtonAnchorEl,\n      open: Boolean(this.state.exportButtonAnchorEl),\n      onClose: () => this.setState({\n        exportButtonAnchorEl: null\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, (this.props.exportButton === true || this.props.exportButton.csv) && /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"export-csv\",\n      onClick: this.exportCsv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, localization.exportCSVName), (this.props.exportButton === true || this.props.exportButton.pdf) && /*#__PURE__*/React.createElement(MenuItem, {\n      key: \"export-pdf\",\n      onClick: this.exportPdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, localization.exportPDFName))), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(this.props.components.Actions, {\n      actions: this.props.actions && this.props.actions.filter(a => a.position === \"toolbar\"),\n      components: this.props.components,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    })));\n  }\n\n  renderSelectedActions() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(this.props.components.Actions, {\n      actions: this.props.actions.filter(a => a.position === \"toolbarOnSelect\"),\n      data: this.props.selectedRows,\n      components: this.props.components,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderActions() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.actions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }\n    }, this.props.selectedRows && this.props.selectedRows.length > 0 ? this.renderSelectedActions() : this.renderDefaultActions()));\n  }\n\n  renderToolbarTitle(title) {\n    const {\n      classes\n    } = this.props;\n    const toolBarTitle = typeof title === \"string\" ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, title) : title;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 12\n      }\n    }, toolBarTitle);\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const localization = { ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization\n    };\n    const title = this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 ? typeof localization.nRowsSelected === \"function\" ? localization.nRowsSelected(this.props.selectedRows.length) : localization.nRowsSelected.replace(\"{0}\", this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;\n    return /*#__PURE__*/React.createElement(Toolbar, {\n      className: classNames(classes.root, {\n        [classes.highlight]: this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 7\n      }\n    }, title && this.renderToolbarTitle(title), this.props.searchFieldAlignment === \"left\" && this.renderSearch(), this.props.toolbarButtonAlignment === \"right\" && this.renderActions(), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.spacer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }), this.props.searchFieldAlignment === \"right\" && this.renderSearch(), this.props.toolbarButtonAlignment === \"right\" && this.renderActions());\n  }\n\n}\nCustomMTableToolbar.defaultProps = {\n  actions: [],\n  columns: [],\n  columnsButton: false,\n  localization: {\n    addRemoveColumns: \"Add or remove columns\",\n    nRowsSelected: \"{0} row(s) selected\",\n    showColumnsTitle: \"Show Columns\",\n    showColumnsAriaLabel: \"Show Columns\",\n    exportTitle: \"Export\",\n    exportAriaLabel: \"Export\",\n    exportCSVName: \"Export as CSV\",\n    exportPDFName: \"Export as PDF\",\n    searchTooltip: \"Search\",\n    searchPlaceholder: \"Search\",\n    searchAriaLabel: \"Search\",\n    clearSearchAriaLabel: \"Clear Search\"\n  },\n  search: true,\n  showTitle: true,\n  searchText: \"\",\n  showTextRowsSelected: true,\n  toolbarButtonAlignment: \"right\",\n  searchAutoFocus: false,\n  searchFieldAlignment: \"right\",\n  searchFieldVariant: \"standard\",\n  selectedRows: [],\n  title: \"No Title!\"\n};\nCustomMTableToolbar.propTypes = {\n  actions: PropTypes.array,\n  columns: PropTypes.array,\n  columnsButton: PropTypes.bool,\n  components: PropTypes.object.isRequired,\n  getFieldValue: PropTypes.func.isRequired,\n  localization: PropTypes.object.isRequired,\n  onColumnsChanged: PropTypes.func.isRequired,\n  dataManager: PropTypes.object.isRequired,\n  searchText: PropTypes.string,\n  onSearchChanged: PropTypes.func.isRequired,\n  search: PropTypes.bool.isRequired,\n  searchFieldStyle: PropTypes.object,\n  searchFieldVariant: PropTypes.string,\n  selectedRows: PropTypes.array,\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  showTitle: PropTypes.bool.isRequired,\n  showTextRowsSelected: PropTypes.bool.isRequired,\n  toolbarButtonAlignment: PropTypes.string.isRequired,\n  searchFieldAlignment: PropTypes.string.isRequired,\n  renderData: PropTypes.array,\n  data: PropTypes.array,\n  exportAllData: PropTypes.bool,\n  exportButton: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    csv: PropTypes.bool,\n    pdf: PropTypes.bool\n  })]),\n  exportDelimiter: PropTypes.string,\n  exportFileName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  exportCsv: PropTypes.func,\n  exportPdf: PropTypes.func,\n  classes: PropTypes.object,\n  searchAutoFocus: PropTypes.bool\n};\nexport const styles = theme => ({\n  root: {\n    paddingRight: theme.spacing(5)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: \"1 1 10%\"\n  },\n  actions: {\n    color: theme.palette.text.secondary.dark\n  },\n  title: {\n    overflow: \"hidden\"\n  },\n  searchField: {\n    minWidth: 150,\n    paddingLeft: theme.spacing(2)\n  },\n  formControlLabel: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  }\n});\nexport default withStyles(styles)(CustomMTableToolbar);","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/MaterialUI/CustomToolbar.js"],"names":["Checkbox","FormControlLabel","IconButton","InputAdornment","Menu","MenuItem","TextField","Toolbar","Tooltip","Typography","withStyles","lighten","classNames","CsvBuilder","PropTypes","oneOf","React","jsPDF","window","require","CustomMTableToolbar","Component","constructor","props","onSearchChange","searchText","dataManager","changeSearchText","setState","onSearchChanged","getTableData","columns","filter","columnDef","hidden","export","field","sort","a","b","tableData","columnOrder","data","exportAllData","renderData","map","rowData","getFieldValue","defaultExportCsv","fileName","title","exportFileName","builder","setDelimeter","exportDelimiter","setColumns","addRows","exportFile","defaultExportPdf","content","startY","head","body","unit","size","orientation","doc","setFontSize","text","autoTable","save","exportCsv","exportButtonAnchorEl","exportPdf","state","columnsButtonAnchorEl","renderSearch","localization","defaultProps","search","searchAutoFocus","searchFieldAlignment","showTitle","classes","searchField","event","target","value","searchPlaceholder","searchFieldVariant","startAdornment","searchTooltip","endAdornment","clearSearchAriaLabel","style","searchFieldStyle","inputProps","searchAriaLabel","renderDefaultActions","columnsButton","showColumnsTitle","currentTarget","showColumnsAriaLabel","Boolean","opacity","fontWeight","fontSize","addRemoveColumns","col","hiddenByColumnsButton","id","formControlLabel","removable","onColumnsChanged","exportButton","exportTitle","exportAriaLabel","csv","exportCSVName","pdf","exportPDFName","actions","position","components","renderSelectedActions","selectedRows","renderActions","length","renderToolbarTitle","toolBarTitle","whiteSpace","overflow","textOverflow","render","showTextRowsSelected","nRowsSelected","replace","root","highlight","toolbarButtonAlignment","spacer","propTypes","array","bool","object","isRequired","func","string","oneOfType","element","shape","styles","theme","paddingRight","spacing","palette","type","color","secondary","main","backgroundColor","light","primary","dark","flex","minWidth","paddingLeft"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport classNames from \"classnames\";\nimport { CsvBuilder } from \"filefy\";\nimport PropTypes, { oneOf } from \"prop-types\";\nimport \"jspdf-autotable\";\nimport * as React from \"react\";\nconst jsPDF = typeof window !== \"undefined\" ? require(\"jspdf\").jsPDF : null;\n/* eslint-enable no-unused-vars */\n\nexport class CustomMTableToolbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null,\n      searchText: props.searchText,\n    };\n  }\n\n  onSearchChange = (searchText) => {\n    this.props.dataManager.changeSearchText(searchText);\n    this.setState({ searchText }, this.props.onSearchChanged(searchText));\n  };\n\n  getTableData = () => {\n    const columns = this.props.columns\n      .filter(\n        (columnDef) =>\n          (!columnDef.hidden || columnDef.export === true) &&\n          columnDef.export !== false &&\n          columnDef.field\n      )\n      .sort((a, b) =>\n        a.tableData.columnOrder > b.tableData.columnOrder ? 1 : -1\n      );\n    const data = (this.props.exportAllData\n      ? this.props.data\n      : this.props.renderData\n    ).map((rowData) =>\n      columns.map((columnDef) => this.props.getFieldValue(rowData, columnDef))\n    );\n\n    return [columns, data];\n  };\n\n  defaultExportCsv = () => {\n    const [columns, data] = this.getTableData();\n\n    let fileName = this.props.title || \"data\";\n    if (this.props.exportFileName) {\n      fileName =\n        typeof this.props.exportFileName === \"function\"\n          ? this.props.exportFileName()\n          : this.props.exportFileName;\n    }\n\n    const builder = new CsvBuilder(fileName + \".csv\");\n    builder\n      .setDelimeter(this.props.exportDelimiter)\n      .setColumns(columns.map((columnDef) => columnDef.title))\n      .addRows(data)\n      .exportFile();\n  };\n\n  defaultExportPdf = () => {\n    if (jsPDF !== null) {\n      const [columns, data] = this.getTableData();\n\n      let content = {\n        startY: 50,\n        head: [columns.map((columnDef) => columnDef.title)],\n        body: data,\n      };\n\n      const unit = \"pt\";\n      const size = \"A4\";\n      const orientation = \"landscape\";\n\n      const doc = new jsPDF(orientation, unit, size);\n      doc.setFontSize(15);\n      doc.text(this.props.exportFileName || this.props.title, 40, 40);\n      doc.autoTable(content);\n      doc.save(\n        (this.props.exportFileName || this.props.title || \"data\") + \".pdf\"\n      );\n    }\n  };\n\n  exportCsv = () => {\n    if (this.props.exportCsv) {\n      this.props.exportCsv(this.props.columns, this.props.data);\n    } else {\n      this.defaultExportCsv();\n    }\n    this.setState({ exportButtonAnchorEl: null });\n  };\n\n  exportPdf = () => {\n    if (this.props.exportPdf) {\n      this.props.exportPdf(this.props.columns, this.props.data);\n    } else {\n      this.defaultExportPdf();\n    }\n    this.setState({ exportButtonAnchorEl: null });\n  };\n\n  renderSearch() {\n    const localization = {\n      ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization,\n    };\n    if (this.props.search) {\n      return (\n        <TextField\n          autoFocus={this.props.searchAutoFocus}\n          className={\n            this.props.searchFieldAlignment === \"left\" &&\n            this.props.showTitle === false\n              ? null\n              : this.props.classes.searchField\n          }\n          value={this.state.searchText}\n          onChange={(event) => this.onSearchChange(event.target.value)}\n          placeholder={localization.searchPlaceholder}\n          variant={this.props.searchFieldVariant}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Tooltip title={localization.searchTooltip}>\n                  <this.props.icons.Search fontSize=\"small\" />\n                </Tooltip>\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  disabled={!this.state.searchText}\n                  onClick={() => this.onSearchChange(\"\")}\n                  aria-label={localization.clearSearchAriaLabel}\n                >\n                  <this.props.icons.ResetSearch\n                    fontSize=\"small\"\n                    aria-label=\"clear\"\n                  />\n                </IconButton>\n              </InputAdornment>\n            ),\n            style: this.props.searchFieldStyle,\n            inputProps: {\n              \"aria-label\": localization.searchAriaLabel,\n            },\n          }}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n\n  renderDefaultActions() {\n    const localization = {\n      ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization,\n    };\n    const { classes } = this.props;\n\n    return (\n      <div>\n        {this.props.columnsButton && (\n          <span>\n            <Tooltip title={localization.showColumnsTitle}>\n              <IconButton\n                color=\"inherit\"\n                onClick={(event) =>\n                  this.setState({\n                    columnsButtonAnchorEl: event.currentTarget,\n                  })\n                }\n                aria-label={localization.showColumnsAriaLabel}\n              >\n                <this.props.icons.ViewColumn />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={this.state.columnsButtonAnchorEl}\n              open={Boolean(this.state.columnsButtonAnchorEl)}\n              onClose={() => this.setState({ columnsButtonAnchorEl: null })}\n            >\n              <MenuItem\n                key={\"text\"}\n                disabled\n                style={{\n                  opacity: 1,\n                  fontWeight: 600,\n                  fontSize: 12,\n                }}\n              >\n                {localization.addRemoveColumns}\n              </MenuItem>\n              {this.props.columns.map((col) => {\n                if (!col.hidden || col.hiddenByColumnsButton) {\n                  return (\n                    <li key={col.tableData.id}>\n                      <MenuItem\n                        className={classes.formControlLabel}\n                        component=\"label\"\n                        htmlFor={`column-toggle-${col.tableData.id}`}\n                        disabled={col.removable === false}\n                      >\n                        <Checkbox\n                          checked={!col.hidden}\n                          id={`column-toggle-${col.tableData.id}`}\n                          onChange={() =>\n                            this.props.onColumnsChanged(col, !col.hidden)\n                          }\n                        />\n                        <span>{col.title}</span>\n                      </MenuItem>\n                    </li>\n                  );\n                }\n                return null;\n              })}\n            </Menu>\n          </span>\n        )}\n        {this.props.exportButton && (\n          <span>\n            <Tooltip title={localization.exportTitle}>\n              <IconButton\n                color=\"inherit\"\n                onClick={(event) =>\n                  this.setState({\n                    exportButtonAnchorEl: event.currentTarget,\n                  })\n                }\n                aria-label={localization.exportAriaLabel}\n              >\n                <this.props.icons.Export />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              anchorEl={this.state.exportButtonAnchorEl}\n              open={Boolean(this.state.exportButtonAnchorEl)}\n              onClose={() => this.setState({ exportButtonAnchorEl: null })}\n            >\n              {(this.props.exportButton === true ||\n                this.props.exportButton.csv) && (\n                <MenuItem key=\"export-csv\" onClick={this.exportCsv}>\n                  {localization.exportCSVName}\n                </MenuItem>\n              )}\n              {(this.props.exportButton === true ||\n                this.props.exportButton.pdf) && (\n                <MenuItem key=\"export-pdf\" onClick={this.exportPdf}>\n                  {localization.exportPDFName}\n                </MenuItem>\n              )}\n            </Menu>\n          </span>\n        )}\n        <span>\n          <this.props.components.Actions\n            actions={\n              this.props.actions &&\n              this.props.actions.filter((a) => a.position === \"toolbar\")\n            }\n            components={this.props.components}\n          />\n        </span>\n      </div>\n    );\n  }\n\n  renderSelectedActions() {\n    return (\n      <React.Fragment>\n        <this.props.components.Actions\n          actions={this.props.actions.filter(\n            (a) => a.position === \"toolbarOnSelect\"\n          )}\n          data={this.props.selectedRows}\n          components={this.props.components}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderActions() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.actions}>\n        <div>\n          {this.props.selectedRows && this.props.selectedRows.length > 0\n            ? this.renderSelectedActions()\n            : this.renderDefaultActions()}\n        </div>\n      </div>\n    );\n  }\n\n  renderToolbarTitle(title) {\n    const { classes } = this.props;\n    const toolBarTitle =\n      typeof title === \"string\" ? (\n        <Typography\n          variant=\"h6\"\n          style={{\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n          }}\n        >\n          {title}\n        </Typography>\n      ) : (\n        title\n      );\n\n    return <div className={classes.title}>{toolBarTitle}</div>;\n  }\n\n  render() {\n    const { classes } = this.props;\n    const localization = {\n      ...CustomMTableToolbar.defaultProps.localization,\n      ...this.props.localization,\n    };\n    const title =\n      this.props.showTextRowsSelected &&\n      this.props.selectedRows &&\n      this.props.selectedRows.length > 0\n        ? typeof localization.nRowsSelected === \"function\"\n          ? localization.nRowsSelected(this.props.selectedRows.length)\n          : localization.nRowsSelected.replace(\n              \"{0}\",\n              this.props.selectedRows.length\n            )\n        : this.props.showTitle\n        ? this.props.title\n        : null;\n    return (\n      <Toolbar\n        className={classNames(classes.root, {\n          [classes.highlight]:\n            this.props.showTextRowsSelected &&\n            this.props.selectedRows &&\n            this.props.selectedRows.length > 0,\n        })}\n      >\n        {title && this.renderToolbarTitle(title)}\n        {this.props.searchFieldAlignment === \"left\" && this.renderSearch()}\n        {this.props.toolbarButtonAlignment === \"right\" && this.renderActions()}\n        <div className={classes.spacer} />\n        {this.props.searchFieldAlignment === \"right\" && this.renderSearch()}\n        {this.props.toolbarButtonAlignment === \"right\" && this.renderActions()}\n      </Toolbar>\n    );\n  }\n}\n\nCustomMTableToolbar.defaultProps = {\n  actions: [],\n  columns: [],\n  columnsButton: false,\n  localization: {\n    addRemoveColumns: \"Add or remove columns\",\n    nRowsSelected: \"{0} row(s) selected\",\n    showColumnsTitle: \"Show Columns\",\n    showColumnsAriaLabel: \"Show Columns\",\n    exportTitle: \"Export\",\n    exportAriaLabel: \"Export\",\n    exportCSVName: \"Export as CSV\",\n    exportPDFName: \"Export as PDF\",\n    searchTooltip: \"Search\",\n    searchPlaceholder: \"Search\",\n    searchAriaLabel: \"Search\",\n    clearSearchAriaLabel: \"Clear Search\",\n  },\n  search: true,\n  showTitle: true,\n  searchText: \"\",\n  showTextRowsSelected: true,\n  toolbarButtonAlignment: \"right\",\n  searchAutoFocus: false,\n  searchFieldAlignment: \"right\",\n  searchFieldVariant: \"standard\",\n  selectedRows: [],\n  title: \"No Title!\",\n};\n\nCustomMTableToolbar.propTypes = {\n  actions: PropTypes.array,\n  columns: PropTypes.array,\n  columnsButton: PropTypes.bool,\n  components: PropTypes.object.isRequired,\n  getFieldValue: PropTypes.func.isRequired,\n  localization: PropTypes.object.isRequired,\n  onColumnsChanged: PropTypes.func.isRequired,\n  dataManager: PropTypes.object.isRequired,\n  searchText: PropTypes.string,\n  onSearchChanged: PropTypes.func.isRequired,\n  search: PropTypes.bool.isRequired,\n  searchFieldStyle: PropTypes.object,\n  searchFieldVariant: PropTypes.string,\n  selectedRows: PropTypes.array,\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\n  showTitle: PropTypes.bool.isRequired,\n  showTextRowsSelected: PropTypes.bool.isRequired,\n  toolbarButtonAlignment: PropTypes.string.isRequired,\n  searchFieldAlignment: PropTypes.string.isRequired,\n  renderData: PropTypes.array,\n  data: PropTypes.array,\n  exportAllData: PropTypes.bool,\n  exportButton: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.shape({ csv: PropTypes.bool, pdf: PropTypes.bool }),\n  ]),\n  exportDelimiter: PropTypes.string,\n  exportFileName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  exportCsv: PropTypes.func,\n  exportPdf: PropTypes.func,\n  classes: PropTypes.object,\n  searchAutoFocus: PropTypes.bool,\n};\n\nexport const styles = (theme) => ({\n  root: {\n    paddingRight: theme.spacing(5),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: \"1 1 10%\",\n  },\n  actions: {\n    color: theme.palette.text.secondary.dark,\n  },\n  title: {\n    overflow: \"hidden\",\n  },\n  searchField: {\n    minWidth: 150,\n    paddingLeft: theme.spacing(2),\n  },\n  formControlLabel: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n});\n\nexport default withStyles(styles)(CustomMTableToolbar);\n"]},"metadata":{},"sourceType":"module"}