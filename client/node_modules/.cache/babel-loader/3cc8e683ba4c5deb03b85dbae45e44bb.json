{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    weeks: weeks,\n    items: items,\n    selectedMonth: selectedMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableHead() {\n  const weekdayNames = []; // const weekNumber = <th className=\"align-middle text-center\">Week</th>;\n  // weekdayNames.push(weekNumber);\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      className: \"align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, moment().isoWeekday([i]).format(\"ddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, weekdayNames));\n}\n\nfunction TableBody(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  console.log(\"selected month: \" + selectedMonth.month());\n  const spendingMonth = items.filter((item, i) => {\n    console.log(\"item month: \" + new Date(item.date));\n  }); // console.log(\"month: \" + moment(selectedMonth).month());\n\n  const rows = weeks.map((week, i) => {\n    // console.log(\"week: \" + week);\n    week = Array.from(week, item => typeof item === \"undefined\" ? \"\" : item);\n    const td = week.map((day, i) => {\n      const daySpending = items.filter((item, i) => {\n        return new Date(item.date) === moment().month(selectedMonth).day(day);\n      });\n      return /*#__PURE__*/React.createElement(\"td\", {\n        className: \"align-middle text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, day);\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }, td);\n  });\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, rows);\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  const {\n    items\n  } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row container m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadPreviousMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, selectedMonth.format(\"MMMM\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadNextMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Next\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    weeks: weeks,\n    selectedMonth: selectedMonth,\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DisplayCalendar;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","useState","moment","Table","props","weeks","items","selectedMonth","TableHead","weekdayNames","i","weekday","isoWeekday","format","push","TableBody","console","log","month","spendingMonth","filter","item","Date","date","rows","map","week","Array","from","td","day","daySpending","GetWeeksOfMonth","dayCount","daysInMonth","index","d","undefined","DisplayCalendar","setMonth","setWeeks","loadNextMonth","nextMonth","add","loadPreviousMonth","previousMonth","subtract"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const { weeks, items, selectedMonth } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHead />\n      <TableBody weeks={weeks} items={items} selectedMonth={selectedMonth} />\n    </table>\n  );\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n  // const weekNumber = <th className=\"align-middle text-center\">Week</th>;\n  // weekdayNames.push(weekNumber);\n  for (let i = 1; i <= 7; i++) {\n    const weekday = (\n      <th key={i} className=\"align-middle text-center\">\n        {moment().isoWeekday([i]).format(\"ddd\")}\n      </th>\n    );\n    weekdayNames.push(weekday);\n  }\n\n  return (\n    <thead>\n      <tr>{weekdayNames}</tr>\n    </thead>\n  );\n}\n\nfunction TableBody(props) {\n  const { weeks, items, selectedMonth } = props;\n  console.log(\"selected month: \" + selectedMonth.month());\n\n  const spendingMonth = items.filter((item, i) => {\n    console.log(\"item month: \" + new Date(item.date));\n  });\n  // console.log(\"month: \" + moment(selectedMonth).month());\n  const rows = weeks.map((week, i) => {\n    // console.log(\"week: \" + week);\n    week = Array.from(week, (item) =>\n      typeof item === \"undefined\" ? \"\" : item\n    );\n    const td = week.map((day, i) => {\n      const daySpending = items.filter((item, i) => {\n        return new Date(item.date) === moment().month(selectedMonth).day(day);\n      });\n\n      return <td className=\"align-middle text-center\">{day}</td>;\n    });\n\n    return <tr>{td}</tr>;\n  });\n\n  return <tbody>{rows}</tbody>;\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  const { items } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return (\n    <div className=\"container border\">\n      <div className=\"row container m-3\">\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadPreviousMonth(selectedMonth)}\n          >\n            Previous\n          </button>\n        </div>\n        <div className=\"col-6 text-center\">\n          <h4 className=\"text-middle\">{selectedMonth.format(\"MMMM\")}</h4>\n        </div>\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadNextMonth(selectedMonth)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n      <div>\n        <Table weeks={weeks} selectedMonth={selectedMonth} items={items} />\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayCalendar;\n"]},"metadata":{},"sourceType":"module"}