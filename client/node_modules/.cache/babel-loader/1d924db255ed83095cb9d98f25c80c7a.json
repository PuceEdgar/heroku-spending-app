{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/DateRangePicker.js\";\nimport React from \"react\";\nimport { DateRangePicker, DateRange } from \"materialui-daterange-picker\";\n\nconst RangePicker = props => {\n  const {\n    filterByPeriod\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [dateRange, setDateRange] = React.useState({});\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  function Selected(ev) {\n    console.log(\"selected: \" + Object.entries(ev)); // console.log(\"val 0\" + Object.values(ev)[0]);\n    // console.log(\"val 1\" + Object.values(ev)[1]);\n    // console.log(\"val 2\" + Object.values(ev)[2]);\n\n    let from;\n    let to;\n\n    if (Object.values(ev)[0].contains(\"Month\")) {\n      from = new Date(Object.values(ev)[1]).toLocaleDateString();\n      to = new Date(Object.values(ev)[2]).toLocaleDateString();\n    } else {\n      from = new Date(Object.values(ev)[0]).toLocaleDateString();\n      to = new Date(Object.values(ev)[1]).toLocaleDateString();\n    }\n\n    console.log(\"from: \" + from);\n    console.log(\"to: \" + to);\n    let range = {\n      from: from,\n      to: to\n    };\n    filterByPeriod(range);\n    setDateRange(ev);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => toggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Open calendar\"), /*#__PURE__*/React.createElement(DateRangePicker, {\n    open: open,\n    toggle: toggle,\n    onChange: range => Selected(range),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RangePicker;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/DateRangePicker.js"],"names":["React","DateRangePicker","DateRange","RangePicker","props","filterByPeriod","open","setOpen","useState","dateRange","setDateRange","toggle","Selected","ev","console","log","Object","entries","from","to","values","contains","Date","toLocaleDateString","range"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,6BAA3C;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAqBD,KAA3B;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAlC;;AAEA,QAAMG,MAAM,GAAG,MAAM;AACnBJ,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,WAASM,QAAT,CAAkBC,EAAlB,EAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeC,MAAM,CAACC,OAAP,CAAeJ,EAAf,CAA3B,EADoB,CAEpB;AACA;AACA;;AAEA,QAAIK,IAAJ;AACA,QAAIC,EAAJ;;AAEA,QAAIH,MAAM,CAACI,MAAP,CAAcP,EAAd,EAAkB,CAAlB,EAAqBQ,QAArB,CAA8B,OAA9B,CAAJ,EAA4C;AAC1CH,MAAAA,IAAI,GAAG,IAAII,IAAJ,CAASN,MAAM,CAACI,MAAP,CAAcP,EAAd,EAAkB,CAAlB,CAAT,EAA+BU,kBAA/B,EAAP;AACAJ,MAAAA,EAAE,GAAG,IAAIG,IAAJ,CAASN,MAAM,CAACI,MAAP,CAAcP,EAAd,EAAkB,CAAlB,CAAT,EAA+BU,kBAA/B,EAAL;AACD,KAHD,MAGO;AACLL,MAAAA,IAAI,GAAG,IAAII,IAAJ,CAASN,MAAM,CAACI,MAAP,CAAcP,EAAd,EAAkB,CAAlB,CAAT,EAA+BU,kBAA/B,EAAP;AACAJ,MAAAA,EAAE,GAAG,IAAIG,IAAJ,CAASN,MAAM,CAACI,MAAP,CAAcP,EAAd,EAAkB,CAAlB,CAAT,EAA+BU,kBAA/B,EAAL;AACD;;AAEDT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWG,IAAvB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASI,EAArB;AACA,QAAIK,KAAK,GAAG;AACVN,MAAAA,IAAI,EAAEA,IADI;AAEVC,MAAAA,EAAE,EAAEA;AAFM,KAAZ;AAIAd,IAAAA,cAAc,CAACmB,KAAD,CAAd;AACAd,IAAAA,YAAY,CAACG,EAAD,CAAZ;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAE,MAAMF,MAAM,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,oBAAC,eAAD;AACE,IAAA,IAAI,EAAEL,IADR;AAEE,IAAA,MAAM,EAAEK,MAFV;AAGE,IAAA,QAAQ,EAAGa,KAAD,IAAWZ,QAAQ,CAACY,KAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAYD,CA/CD;;AAiDA,eAAerB,WAAf","sourcesContent":["import React from \"react\";\nimport { DateRangePicker, DateRange } from \"materialui-daterange-picker\";\n\nconst RangePicker = (props) => {\n  const { filterByPeriod } = props;\n  const [open, setOpen] = React.useState(false);\n  const [dateRange, setDateRange] = React.useState({});\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  function Selected(ev) {\n    console.log(\"selected: \" + Object.entries(ev));\n    // console.log(\"val 0\" + Object.values(ev)[0]);\n    // console.log(\"val 1\" + Object.values(ev)[1]);\n    // console.log(\"val 2\" + Object.values(ev)[2]);\n\n    let from;\n    let to;\n\n    if (Object.values(ev)[0].contains(\"Month\")) {\n      from = new Date(Object.values(ev)[1]).toLocaleDateString();\n      to = new Date(Object.values(ev)[2]).toLocaleDateString();\n    } else {\n      from = new Date(Object.values(ev)[0]).toLocaleDateString();\n      to = new Date(Object.values(ev)[1]).toLocaleDateString();\n    }\n\n    console.log(\"from: \" + from);\n    console.log(\"to: \" + to);\n    let range = {\n      from: from,\n      to: to,\n    };\n    filterByPeriod(range);\n    setDateRange(ev);\n  }\n  return (\n    <div className=\"container m-3\">\n      <button className=\"btn btn-outline-info\" onClick={() => toggle()}>\n        Open calendar\n      </button>\n      <DateRangePicker\n        open={open}\n        toggle={toggle}\n        onChange={(range) => Selected(range)}\n      />\n    </div>\n  );\n};\n\nexport default RangePicker;\n"]},"metadata":{},"sourceType":"module"}