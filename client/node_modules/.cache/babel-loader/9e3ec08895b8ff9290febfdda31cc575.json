{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/MaterialUITable.js\";\nimport React from \"react\";\nimport MaterialTable from \"material-table\";\nexport default function MaterialTableDemo(props) {\n  const {\n    type,\n    items,\n    handleSubmit,\n    removeItem,\n    editItem\n  } = props;\n  const [data, setData] = React.useState([]); //table data\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:9000/getitems\").then(res => res.json()).then(res => {\n      let t = res.filter(item => {\n        return item.type === type;\n      });\n      setData(t);\n    }).catch(error => {});\n  }, []);\n  const columns = [{\n    title: \"Place\",\n    field: \"place\"\n  }, {\n    title: \"Amount\",\n    field: \"amount\",\n    type: \"numeric\"\n  }]; //const tableName = type + \" \" + data.length;\n\n  const tableName = pro => {\n    const tname = pro + \" \" + data.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, tname));\n  };\n\n  const handleRowAdd = (newData, resolve) => {\n    // fetch(\"http://localhost:9000/additem\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newData),\n    // })\n    //   .then((response) => response.json())\n    //   .then((res) => {\n    //     let dataToAdd = [...data];\n    //     dataToAdd.push(newData);\n    //     setData(dataToAdd);\n    //     resolve();\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Error:\", error);\n    //     resolve();\n    //   });\n    handleSubmit(newData);\n    let dataToAdd = [...data];\n    dataToAdd.push(newData);\n    setData(dataToAdd);\n    resolve();\n  };\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    console.log(\"row updated: \" + newData);\n    editItem(newData);\n    const dataUpdate = [...data];\n    const index = oldData.tableData.id;\n    dataUpdate[index] = newData;\n    setData([...dataUpdate]);\n    resolve(); //   api.patch(\"/users/\"+newData.id, newData)\n    //     .then(res => {\n    //       const dataUpdate = [...data];\n    //       const index = oldData.tableData.id;\n    //       dataUpdate[index] = newData;\n    //       setData([...dataUpdate]);\n    //       resolve()\n    //     })\n    //     .catch(error => {\n    //       resolve()\n    //   })\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    console.log(\"row deleted: \" + oldData);\n    removeItem(oldData.id);\n    const dataDelete = [...data];\n    const index = oldData.tableData.id;\n    dataDelete.splice(index, 1);\n    setData([...dataDelete]);\n    resolve(); // api\n    //   .delete(\"/users/\" + oldData.id)\n    //   .then((res) => {\n    //     const dataDelete = [...data];\n    //     const index = oldData.tableData.id;\n    //     dataDelete.splice(index, 1);\n    //     setData([...dataDelete]);\n    //     resolve();\n    //   })\n    //   .catch((error) => {\n    //     setErrorMessages([\"Delete failed! Server error\"]);\n    //     setIserror(true);\n    //     resolve();\n    //   });\n  };\n\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    options: {\n      search: false\n    },\n    title: tableName(type),\n    columns: columns,\n    data: data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        handleRowUpdate(newData, oldData, resolve);\n      }),\n      onRowAdd: newData => new Promise(resolve => {\n        handleRowAdd(newData, resolve);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        handleRowDelete(oldData, resolve);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }) // <MaterialTable\n  //   options={{\n  //     search: false,\n  //   }}\n  //   title={name}\n  //   columns={state.columns}\n  //   data={data}\n  //   editable={{\n  //     onRowAdd: (newData) =>\n  //       new Promise((resolve) => {\n  //         setTimeout(() => {\n  //           resolve();\n  //           setData((prevData) => {\n  //             const data = [...prevData];\n  //             data.push(newData);\n  //             return { ...prevData, data };\n  //           });\n  //         }, 600);\n  //       }),\n  //     onRowUpdate: (newData, oldData) =>\n  //       new Promise((resolve) => {\n  //         setTimeout(() => {\n  //           resolve();\n  //           if (oldData) {\n  //             setData((prevData) => {\n  //               const data = [...prevData];\n  //               data[data.indexOf(oldData)] = newData;\n  //               return { ...prevData, data };\n  //             });\n  //           }\n  //         }, 600);\n  //       }),\n  //     onRowDelete: (oldData) =>\n  //       new Promise((resolve) => {\n  //         setTimeout(() => {\n  //           resolve();\n  //           setData((prevData) => {\n  //             const data = [...prevData];\n  //             data.splice(data.indexOf(oldData), 1);\n  //             return { ...prevData, data };\n  //           });\n  //         }, 600);\n  //       }),\n  //   }}\n  // />\n  ;\n}","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/MaterialUITable.js"],"names":["React","MaterialTable","MaterialTableDemo","props","type","items","handleSubmit","removeItem","editItem","data","setData","useState","useEffect","fetch","then","res","json","t","filter","item","catch","error","columns","title","field","tableName","pro","tname","length","handleRowAdd","newData","resolve","dataToAdd","push","handleRowUpdate","oldData","console","log","dataUpdate","index","tableData","id","handleRowDelete","dataDelete","splice","search","onRowUpdate","Promise","onRowAdd","onRowDelete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA,UAA7B;AAAyCC,IAAAA;AAAzC,MAAsDL,KAA5D;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAxB,CAH+C,CAGH;;AAE5CX,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESC,GAAD,IAAS;AACb,UAAIE,CAAC,GAAGF,GAAG,CAACG,MAAJ,CAAYC,IAAD,IAAU;AAC3B,eAAOA,IAAI,CAACf,IAAL,KAAcA,IAArB;AACD,OAFO,CAAR;AAGAM,MAAAA,OAAO,CAACO,CAAD,CAAP;AACD,KAPH,EAQGG,KARH,CAQUC,KAAD,IAAW,CAAE,CARtB;AASD,GAVD,EAUG,EAVH;AAWA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADc,EAEd;AAAED,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAE,QAA1B;AAAoCpB,IAAAA,IAAI,EAAE;AAA1C,GAFc,CAAhB,CAhB+C,CAqB/C;;AAEA,QAAMqB,SAAS,GAAIC,GAAD,IAAS;AACzB,UAAMC,KAAK,GAAGD,GAAG,GAAG,GAAN,GAAYjB,IAAI,CAACmB,MAA/B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BD,KAA3B,CADF,CADF;AAKD,GAPD;;AASA,QAAME,YAAY,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAzB,IAAAA,YAAY,CAACwB,OAAD,CAAZ;AACA,QAAIE,SAAS,GAAG,CAAC,GAAGvB,IAAJ,CAAhB;AACAuB,IAAAA,SAAS,CAACC,IAAV,CAAeH,OAAf;AACApB,IAAAA,OAAO,CAACsB,SAAD,CAAP;AACAD,IAAAA,OAAO;AACR,GAxBD;;AA0BA,QAAMG,eAAe,GAAG,CAACJ,OAAD,EAAUK,OAAV,EAAmBJ,OAAnB,KAA+B;AACrDK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBP,OAA9B;AACAtB,IAAAA,QAAQ,CAACsB,OAAD,CAAR;AACA,UAAMQ,UAAU,GAAG,CAAC,GAAG7B,IAAJ,CAAnB;AACA,UAAM8B,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,EAAhC;AACAH,IAAAA,UAAU,CAACC,KAAD,CAAV,GAAoBT,OAApB;AACApB,IAAAA,OAAO,CAAC,CAAC,GAAG4B,UAAJ,CAAD,CAAP;AACAP,IAAAA,OAAO,GAP8C,CAQrD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACD,GArBD;;AAuBA,QAAMW,eAAe,GAAG,CAACP,OAAD,EAAUJ,OAAV,KAAsB;AAC5CK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBF,OAA9B;AACA5B,IAAAA,UAAU,CAAC4B,OAAO,CAACM,EAAT,CAAV;AACA,UAAME,UAAU,GAAG,CAAC,GAAGlC,IAAJ,CAAnB;AACA,UAAM8B,KAAK,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,EAAhC;AACAE,IAAAA,UAAU,CAACC,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACA7B,IAAAA,OAAO,CAAC,CAAC,GAAGiC,UAAJ,CAAD,CAAP;AACAZ,IAAAA,OAAO,GAPqC,CAQ5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAtBD;;AAwBA,sBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE;AACPc,MAAAA,MAAM,EAAE;AADD,KADX;AAIE,IAAA,KAAK,EAAEpB,SAAS,CAACrB,IAAD,CAJlB;AAKE,IAAA,OAAO,EAAEkB,OALX;AAME,IAAA,IAAI,EAAEb,IANR;AAOE,IAAA,QAAQ,EAAE;AACRqC,MAAAA,WAAW,EAAE,CAAChB,OAAD,EAAUK,OAAV,KACX,IAAIY,OAAJ,CAAahB,OAAD,IAAa;AACvBG,QAAAA,eAAe,CAACJ,OAAD,EAAUK,OAAV,EAAmBJ,OAAnB,CAAf;AACD,OAFD,CAFM;AAKRiB,MAAAA,QAAQ,EAAGlB,OAAD,IACR,IAAIiB,OAAJ,CAAahB,OAAD,IAAa;AACvBF,QAAAA,YAAY,CAACC,OAAD,EAAUC,OAAV,CAAZ;AACD,OAFD,CANM;AASRkB,MAAAA,WAAW,EAAGd,OAAD,IACX,IAAIY,OAAJ,CAAahB,OAAD,IAAa;AACvBW,QAAAA,eAAe,CAACP,OAAD,EAAUJ,OAAV,CAAf;AACD,OAFD;AAVM,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAuBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEF;AAqED","sourcesContent":["import React from \"react\";\nimport MaterialTable from \"material-table\";\n\nexport default function MaterialTableDemo(props) {\n  const { type, items, handleSubmit, removeItem, editItem } = props;\n\n  const [data, setData] = React.useState([]); //table data\n\n  React.useEffect(() => {\n    fetch(\"http://localhost:9000/getitems\")\n      .then((res) => res.json())\n      .then((res) => {\n        let t = res.filter((item) => {\n          return item.type === type;\n        });\n        setData(t);\n      })\n      .catch((error) => {});\n  }, []);\n  const columns = [\n    { title: \"Place\", field: \"place\" },\n    { title: \"Amount\", field: \"amount\", type: \"numeric\" },\n  ];\n\n  //const tableName = type + \" \" + data.length;\n\n  const tableName = (pro) => {\n    const tname = pro + \" \" + data.length;\n    return (\n      <div>\n        <span className=\"warning\">{tname}</span>\n      </div>\n    );\n  };\n\n  const handleRowAdd = (newData, resolve) => {\n    // fetch(\"http://localhost:9000/additem\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newData),\n    // })\n    //   .then((response) => response.json())\n    //   .then((res) => {\n    //     let dataToAdd = [...data];\n    //     dataToAdd.push(newData);\n    //     setData(dataToAdd);\n    //     resolve();\n    //   })\n    //   .catch((error) => {\n    //     console.error(\"Error:\", error);\n    //     resolve();\n    //   });\n    handleSubmit(newData);\n    let dataToAdd = [...data];\n    dataToAdd.push(newData);\n    setData(dataToAdd);\n    resolve();\n  };\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    console.log(\"row updated: \" + newData);\n    editItem(newData);\n    const dataUpdate = [...data];\n    const index = oldData.tableData.id;\n    dataUpdate[index] = newData;\n    setData([...dataUpdate]);\n    resolve();\n    //   api.patch(\"/users/\"+newData.id, newData)\n    //     .then(res => {\n    //       const dataUpdate = [...data];\n    //       const index = oldData.tableData.id;\n    //       dataUpdate[index] = newData;\n    //       setData([...dataUpdate]);\n    //       resolve()\n\n    //     })\n    //     .catch(error => {\n\n    //       resolve()\n    //   })\n  };\n\n  const handleRowDelete = (oldData, resolve) => {\n    console.log(\"row deleted: \" + oldData);\n    removeItem(oldData.id);\n    const dataDelete = [...data];\n    const index = oldData.tableData.id;\n    dataDelete.splice(index, 1);\n    setData([...dataDelete]);\n    resolve();\n    // api\n    //   .delete(\"/users/\" + oldData.id)\n    //   .then((res) => {\n    //     const dataDelete = [...data];\n    //     const index = oldData.tableData.id;\n    //     dataDelete.splice(index, 1);\n    //     setData([...dataDelete]);\n    //     resolve();\n    //   })\n    //   .catch((error) => {\n    //     setErrorMessages([\"Delete failed! Server error\"]);\n    //     setIserror(true);\n    //     resolve();\n    //   });\n  };\n\n  return (\n    <MaterialTable\n      options={{\n        search: false,\n      }}\n      title={tableName(type)}\n      columns={columns}\n      data={data}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve);\n          }),\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve);\n          }),\n      }}\n    />\n    // <MaterialTable\n    //   options={{\n    //     search: false,\n    //   }}\n    //   title={name}\n    //   columns={state.columns}\n    //   data={data}\n    //   editable={{\n    //     onRowAdd: (newData) =>\n    //       new Promise((resolve) => {\n    //         setTimeout(() => {\n    //           resolve();\n    //           setData((prevData) => {\n    //             const data = [...prevData];\n    //             data.push(newData);\n    //             return { ...prevData, data };\n    //           });\n    //         }, 600);\n    //       }),\n    //     onRowUpdate: (newData, oldData) =>\n    //       new Promise((resolve) => {\n    //         setTimeout(() => {\n    //           resolve();\n    //           if (oldData) {\n    //             setData((prevData) => {\n    //               const data = [...prevData];\n    //               data[data.indexOf(oldData)] = newData;\n    //               return { ...prevData, data };\n    //             });\n    //           }\n    //         }, 600);\n    //       }),\n    //     onRowDelete: (oldData) =>\n    //       new Promise((resolve) => {\n    //         setTimeout(() => {\n    //           resolve();\n    //           setData((prevData) => {\n    //             const data = [...prevData];\n    //             data.splice(data.indexOf(oldData), 1);\n    //             return { ...prevData, data };\n    //           });\n    //         }, 600);\n    //       }),\n    //   }}\n    // />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}