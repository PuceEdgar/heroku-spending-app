{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/OldApp.js\";\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport OldAccordion from \"./OldAccardion\";\nimport ModalWindow from \"./Components/ModalWindow\";\nimport AddItemForm from \"./Forms/AddItemForm\";\n\nclass OldApp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      incomming: 1000\n    };\n\n    this.removeItem = index => {\n      const {\n        items\n      } = this.state;\n      const jsonObject = items.filter((item, i) => {\n        return item.id === index;\n      });\n      this.deleteData(jsonObject[0]);\n    };\n\n    this.handleSubmit = item => {\n      let idArray = this.state.items.map(item => {\n        return item.id;\n      });\n      var maxId = Math.max(...idArray);\n      item.id = maxId + 1;\n      this.addData(item);\n    };\n\n    this.editItem = item => {\n      this.updateData(item);\n    };\n\n    this.filterByDate = pickedDate => {\n      const byDate = this.state.items.filter((item, i) => {\n        return item.date === pickedDate;\n      });\n      return /*#__PURE__*/React.createElement(FilteredView, {\n        items: byDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 12\n        }\n      });\n    };\n  }\n\n  getData() {\n    fetch(\"http://localhost:9000/getitems\").then(res => res.json()).then(res => {\n      const sortedActivities = res.sort((a, b) => new Date(b.date) - new Date(a.date));\n      this.setState({\n        items: sortedActivities\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  addData(data) {\n    fetch(\"http://localhost:9000/additem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      const sortedActivities = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n      this.setState({\n        items: sortedActivities\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  deleteData(data) {\n    fetch(\"http://localhost:9000/removeitem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      const sortedActivities = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n      this.setState({\n        items: sortedActivities\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  updateData(data) {\n    fetch(\"http://localhost:9000/updateitem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      const sortedActivities = data.sort((a, b) => new Date(b.date) - new Date(a.date));\n      this.setState({\n        items: sortedActivities\n      });\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  render() {\n    const {\n      items,\n      incomming\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid m-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalWindow, {\n      buttonName: \"Add new expense item\",\n      headerName: \"Add item info\",\n      classDescription: \"btn btn-primary btn-lg btn-block\",\n      bodyComponent: /*#__PURE__*/React.createElement(AddItemForm, {\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 26\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OldAccordion, {\n      items: items,\n      incomming: incomming,\n      handleSubmit: this.handleSubmit,\n      removeItem: this.removeItem,\n      editItem: this.editItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default OldApp;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/OldApp.js"],"names":["React","useState","OldAccordion","ModalWindow","AddItemForm","OldApp","Component","state","items","incomming","removeItem","index","jsonObject","filter","item","i","id","deleteData","handleSubmit","idArray","map","maxId","Math","max","addData","editItem","updateData","filterByDate","pickedDate","byDate","date","getData","fetch","then","res","json","sortedActivities","sort","a","b","Date","setState","componentDidMount","data","method","headers","body","JSON","stringify","response","catch","error","console","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../App.css\";\nimport OldAccordion from \"./OldAccardion\";\nimport ModalWindow from \"./Components/ModalWindow\";\nimport AddItemForm from \"./Forms/AddItemForm\";\n\nclass OldApp extends React.Component {\n  state = {\n    items: [],\n    incomming: 1000,\n  };\n\n  getData() {\n    fetch(\"http://localhost:9000/getitems\")\n      .then((res) => res.json())\n      .then((res) => {\n        const sortedActivities = res.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        this.setState({ items: sortedActivities });\n      });\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  addData(data) {\n    fetch(\"http://localhost:9000/additem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const sortedActivities = data.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        this.setState({ items: sortedActivities });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  deleteData(data) {\n    fetch(\"http://localhost:9000/removeitem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const sortedActivities = data.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        this.setState({ items: sortedActivities });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  updateData(data) {\n    fetch(\"http://localhost:9000/updateitem\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const sortedActivities = data.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        this.setState({ items: sortedActivities });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n\n  removeItem = (index) => {\n    const { items } = this.state;\n\n    const jsonObject = items.filter((item, i) => {\n      return item.id === index;\n    });\n\n    this.deleteData(jsonObject[0]);\n  };\n\n  handleSubmit = (item) => {\n    let idArray = this.state.items.map((item) => {\n      return item.id;\n    });\n\n    var maxId = Math.max(...idArray);\n    item.id = maxId + 1;\n\n    this.addData(item);\n  };\n\n  editItem = (item) => {\n    this.updateData(item);\n  };\n\n  filterByDate = (pickedDate) => {\n    const byDate = this.state.items.filter((item, i) => {\n      return item.date === pickedDate;\n    });\n    return <FilteredView items={byDate} />;\n  };\n\n  render() {\n    const { items, incomming } = this.state;\n\n    return (\n      <div className=\"container-fluid m-3\">\n        <ModalWindow\n          buttonName=\"Add new expense item\"\n          headerName=\"Add item info\"\n          classDescription=\"btn btn-primary btn-lg btn-block\"\n          bodyComponent={<AddItemForm handleSubmit={this.handleSubmit} />}\n        />\n        {/* <FromDatePicker filterByDate={this.filterByDate} /> */}\n        <OldAccordion\n          items={items}\n          incomming={incomming}\n          handleSubmit={this.handleSubmit}\n          removeItem={this.removeItem}\n          editItem={this.editItem}\n        />\n        {/* <FilteredView items={items} /> */}\n      </div>\n    );\n  }\n}\n\nexport default OldApp;\n"]},"metadata":{},"sourceType":"module"}