{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/ModalWindow.js\";\nimport React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap/\";\nimport Button from \"@material-ui/core/Button\"; // import * as UIButton from \"@material-ui/core/Button\";\n\nconst ModalButton = props => {\n  const {\n    setShow,\n    name,\n    classDescription,\n    size,\n    variant,\n    color\n  } = props;\n  return /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    color: color,\n    className: classDescription,\n    onClick: () => setShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, name);\n};\n\nconst ModalHeader = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, name));\n};\n\nconst ModalBody = props => {\n  const {\n    bodyComponent,\n    setShow\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.cloneElement(bodyComponent, {\n    setShow: setShow\n  }));\n};\n\nconst ModalFooter = props => {\n  const {\n    setShow\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Close\"));\n};\n\nconst ModalWindow = props => {\n  const {\n    headerName,\n    buttonName,\n    bodyComponent,\n    classDescription,\n    size,\n    color,\n    variant,\n    startIcon\n  } = props;\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalButton, {\n    setShow: setShow,\n    name: buttonName,\n    size: size,\n    variant: variant,\n    color: color,\n    classDescription: classDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    \"aria-labelledby\": \"staticBackdropLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    name: headerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    bodyComponent: bodyComponent,\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModalFooter, {\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/ModalWindow.js"],"names":["React","useState","Modal","Button","ModalButton","props","setShow","name","classDescription","size","variant","color","ModalHeader","ModalBody","bodyComponent","cloneElement","ModalFooter","ModalWindow","headerName","buttonName","startIcon","show"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap/\";\nimport Button from \"@material-ui/core/Button\";\n// import * as UIButton from \"@material-ui/core/Button\";\n\nconst ModalButton = (props) => {\n  const { setShow, name, classDescription, size, variant, color } = props;\n  return (\n    <Button\n      size={size}\n      variant={variant}\n      color={color}\n      className={classDescription}\n      onClick={() => setShow(true)}\n    >\n      {name}\n    </Button>\n  );\n};\n\nconst ModalHeader = (props) => {\n  const { name } = props;\n  return (\n    <Modal.Header closeButton>\n      <Modal.Title>{name}</Modal.Title>\n    </Modal.Header>\n  );\n};\n\nconst ModalBody = (props) => {\n  const { bodyComponent, setShow } = props;\n\n  return (\n    <Modal.Body>\n      {React.cloneElement(bodyComponent, { setShow: setShow })}\n    </Modal.Body>\n  );\n};\n\nconst ModalFooter = (props) => {\n  const { setShow } = props;\n\n  return (\n    <Modal.Footer>\n      <Button\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        onClick={() => setShow(false)}\n      >\n        Close\n      </Button>\n    </Modal.Footer>\n  );\n};\n\nconst ModalWindow = (props) => {\n  const {\n    headerName,\n    buttonName,\n    bodyComponent,\n    classDescription,\n    size,\n    color,\n    variant,\n    startIcon,\n  } = props;\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ModalButton\n        setShow={setShow}\n        name={buttonName}\n        size={size}\n        variant={variant}\n        color={color}\n        classDescription={classDescription}\n      />\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        aria-labelledby=\"staticBackdropLabel\"\n      >\n        <ModalHeader name={headerName} />\n        <ModalBody bodyComponent={bodyComponent} setShow={setShow} />\n        <ModalFooter setShow={setShow} />\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalWindow;\n"]},"metadata":{},"sourceType":"module"}