{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/MaterialUI/CustomCell.js\";\n\n/* eslint-disable no-unused-vars */\nimport * as React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport PropTypes from \"prop-types\";\n/* eslint-enable no-unused-vars */\n\nexport default class CustomCell extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClickCell = e => {\n      if (this.props.columnDef.disableClick) {\n        e.stopPropagation();\n      }\n    };\n\n    this.getStyle = () => {\n      let cellStyle = {\n        color: \"inherit\"\n      };\n\n      if (typeof this.props.columnDef.cellStyle === \"function\") {\n        cellStyle = { ...cellStyle,\n          ...this.props.columnDef.cellStyle(this.props.value, this.props.rowData)\n        };\n      } else {\n        cellStyle = { ...cellStyle,\n          ...this.props.columnDef.cellStyle\n        };\n      }\n\n      if (this.props.columnDef.disableClick) {\n        cellStyle.cursor = \"default\";\n      }\n\n      return { ...this.props.style,\n        ...cellStyle\n      };\n    };\n  }\n\n  getRenderValue() {\n    if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\n    }\n\n    if (this.props.columnDef.render) {\n      if (this.props.rowData) {\n        return this.props.columnDef.render(this.props.rowData, \"row\");\n      } else {\n        return this.props.columnDef.render(this.props.value, \"group\");\n      }\n    } else if (this.props.columnDef.type === \"boolean\") {\n      const style = {\n        textAlign: \"left\",\n        verticalAlign: \"middle\",\n        width: 48\n      };\n\n      if (this.props.value) {\n        return /*#__PURE__*/React.createElement(this.props.icons.Check, {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 16\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(this.props.icons.ThirdStateCheck, {\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 16\n          }\n        });\n      }\n    } else if (this.props.columnDef.type === \"date\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleDateString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"time\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleTimeString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"datetime\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"currency\") {\n      return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\n    }\n\n    return this.props.value;\n  }\n\n  getEmptyValue(emptyValue) {\n    if (typeof emptyValue === \"function\") {\n      return this.props.columnDef.emptyValue(this.props.rowData);\n    } else {\n      return emptyValue;\n    }\n  }\n\n  getCurrencyValue(currencySetting, value) {\n    if (currencySetting !== undefined) {\n      return new Intl.NumberFormat(currencySetting.locale !== undefined ? currencySetting.locale : \"en-US\", {\n        style: \"currency\",\n        currency: currencySetting.currencyCode !== undefined ? currencySetting.currencyCode : \"USD\",\n        minimumFractionDigits: currencySetting.minimumFractionDigits !== undefined ? currencySetting.minimumFractionDigits : 2,\n        maximumFractionDigits: currencySetting.maximumFractionDigits !== undefined ? currencySetting.maximumFractionDigits : 2\n      }).format(value !== undefined ? value : 0);\n    } else {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n      }).format(value !== undefined ? value : 0);\n    }\n  }\n\n  render() {\n    const {\n      icons,\n      columnDef,\n      rowData,\n      ...cellProps\n    } = this.props;\n    return /*#__PURE__*/React.createElement(TableCell, Object.assign({\n      size: this.props.size\n    }, cellProps, {\n      style: this.getStyle(),\n      align: [\"numeric\", \"currency\"].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\",\n      onClick: this.handleClickCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }), this.props.children);\n  }\n\n}\nCustomCell.defaultProps = {\n  columnDef: {},\n  value: undefined\n};\nCustomCell.propTypes = {\n  columnDef: PropTypes.object.isRequired,\n  value: PropTypes.any,\n  rowData: PropTypes.object\n};","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/MaterialUI/CustomCell.js"],"names":["React","TableCell","PropTypes","CustomCell","Component","handleClickCell","e","props","columnDef","disableClick","stopPropagation","getStyle","cellStyle","color","value","rowData","cursor","style","getRenderValue","emptyValue","undefined","getEmptyValue","render","type","textAlign","verticalAlign","width","Date","toLocaleDateString","toLocaleTimeString","toLocaleString","getCurrencyValue","currencySetting","Intl","NumberFormat","locale","currency","currencyCode","minimumFractionDigits","maximumFractionDigits","format","icons","cellProps","size","indexOf","children","defaultProps","propTypes","object","isRequired","any"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport * as React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport PropTypes from \"prop-types\";\n/* eslint-enable no-unused-vars */\n\nexport default class CustomCell extends React.Component {\n  getRenderValue() {\n    if (\n      this.props.columnDef.emptyValue !== undefined &&\n      (this.props.value === undefined || this.props.value === null)\n    ) {\n      return this.getEmptyValue(this.props.columnDef.emptyValue);\n    }\n    if (this.props.columnDef.render) {\n      if (this.props.rowData) {\n        return this.props.columnDef.render(this.props.rowData, \"row\");\n      } else {\n        return this.props.columnDef.render(this.props.value, \"group\");\n      }\n    } else if (this.props.columnDef.type === \"boolean\") {\n      const style = { textAlign: \"left\", verticalAlign: \"middle\", width: 48 };\n      if (this.props.value) {\n        return <this.props.icons.Check style={style} />;\n      } else {\n        return <this.props.icons.ThirdStateCheck style={style} />;\n      }\n    } else if (this.props.columnDef.type === \"date\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleDateString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"time\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleTimeString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"datetime\") {\n      if (this.props.value instanceof Date) {\n        return this.props.value.toLocaleString();\n      } else {\n        return this.props.value;\n      }\n    } else if (this.props.columnDef.type === \"currency\") {\n      return this.getCurrencyValue(\n        this.props.columnDef.currencySetting,\n        this.props.value\n      );\n    }\n\n    return this.props.value;\n  }\n\n  getEmptyValue(emptyValue) {\n    if (typeof emptyValue === \"function\") {\n      return this.props.columnDef.emptyValue(this.props.rowData);\n    } else {\n      return emptyValue;\n    }\n  }\n\n  getCurrencyValue(currencySetting, value) {\n    if (currencySetting !== undefined) {\n      return new Intl.NumberFormat(\n        currencySetting.locale !== undefined ? currencySetting.locale : \"en-US\",\n        {\n          style: \"currency\",\n          currency:\n            currencySetting.currencyCode !== undefined\n              ? currencySetting.currencyCode\n              : \"USD\",\n          minimumFractionDigits:\n            currencySetting.minimumFractionDigits !== undefined\n              ? currencySetting.minimumFractionDigits\n              : 2,\n          maximumFractionDigits:\n            currencySetting.maximumFractionDigits !== undefined\n              ? currencySetting.maximumFractionDigits\n              : 2,\n        }\n      ).format(value !== undefined ? value : 0);\n    } else {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(value !== undefined ? value : 0);\n    }\n  }\n\n  handleClickCell = (e) => {\n    if (this.props.columnDef.disableClick) {\n      e.stopPropagation();\n    }\n  };\n\n  getStyle = () => {\n    let cellStyle = {\n      color: \"inherit\",\n    };\n\n    if (typeof this.props.columnDef.cellStyle === \"function\") {\n      cellStyle = {\n        ...cellStyle,\n        ...this.props.columnDef.cellStyle(this.props.value, this.props.rowData),\n      };\n    } else {\n      cellStyle = { ...cellStyle, ...this.props.columnDef.cellStyle };\n    }\n\n    if (this.props.columnDef.disableClick) {\n      cellStyle.cursor = \"default\";\n    }\n\n    return { ...this.props.style, ...cellStyle };\n  };\n\n  render() {\n    const { icons, columnDef, rowData, ...cellProps } = this.props;\n\n    return (\n      <TableCell\n        size={this.props.size}\n        {...cellProps}\n        style={this.getStyle()}\n        align={\n          [\"numeric\", \"currency\"].indexOf(this.props.columnDef.type) !== -1\n            ? \"right\"\n            : \"left\"\n        }\n        onClick={this.handleClickCell}\n      >\n        {this.props.children}\n      </TableCell>\n    );\n  }\n}\n\nCustomCell.defaultProps = {\n  columnDef: {},\n  value: undefined,\n};\n\nCustomCell.propTypes = {\n  columnDef: PropTypes.object.isRequired,\n  value: PropTypes.any,\n  rowData: PropTypes.object,\n};\n"]},"metadata":{},"sourceType":"module"}