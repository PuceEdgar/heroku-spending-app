{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/ModalWindow.js\";\nimport React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap/\";\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { AddButton } from \"../StyleComponents/StyledButtons\"; // import * as UIButton from \"@material-ui/core/Button\";\n\nconst ModalButton = props => {\n  const {\n    setShow,\n    buttonName,\n    name,\n    classDescription,\n    size,\n    variant,\n    color,\n    startIcon,\n    theme,\n    style\n  } = props;\n\n  if (name === \"add\") {\n    return /*#__PURE__*/React.createElement(AddButton, {\n      startIcon: startIcon,\n      size: size,\n      variant: variant,\n      color: color,\n      className: classDescription,\n      onClick: () => setShow(true),\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, buttonName);\n  } else {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: style,\n      startIcon: startIcon,\n      size: size,\n      variant: variant,\n      color: color,\n      className: classDescription,\n      onClick: () => setShow(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, buttonName));\n  }\n};\n\nconst ModalHeader = props => {\n  const {\n    name\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, name));\n};\n\nconst ModalBody = props => {\n  const {\n    bodyComponent,\n    setShow\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.cloneElement(bodyComponent, {\n    setShow: setShow\n  }));\n};\n\nconst ModalFooter = props => {\n  const {\n    setShow\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Close\"));\n};\n\nconst ModalWindow = props => {\n  const {\n    headerName,\n    buttonName,\n    bodyComponent,\n    classDescription,\n    size,\n    color,\n    variant,\n    startIcon,\n    theme,\n    name,\n    style\n  } = props;\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalButton, {\n    style: style,\n    name: name,\n    startIcon: startIcon,\n    setShow: setShow,\n    buttonName: buttonName,\n    size: size,\n    variant: variant,\n    color: color,\n    theme: theme,\n    classDescription: classDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    \"aria-labelledby\": \"staticBackdropLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    name: headerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    bodyComponent: bodyComponent,\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModalFooter, {\n    setShow: setShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/ModalWindow.js"],"names":["React","useState","Modal","Button","ThemeProvider","AddButton","ModalButton","props","setShow","buttonName","name","classDescription","size","variant","color","startIcon","theme","style","ModalHeader","ModalBody","bodyComponent","cloneElement","ModalFooter","ModalWindow","headerName","show"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap/\";\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { AddButton } from \"../StyleComponents/StyledButtons\";\n// import * as UIButton from \"@material-ui/core/Button\";\n\nconst ModalButton = (props) => {\n  const {\n    setShow,\n    buttonName,\n    name,\n    classDescription,\n    size,\n    variant,\n    color,\n    startIcon,\n    theme,\n    style,\n  } = props;\n\n  if (name === \"add\") {\n    return (\n      <AddButton\n        startIcon={startIcon}\n        size={size}\n        variant={variant}\n        color={color}\n        className={classDescription}\n        onClick={() => setShow(true)}\n        style={style}\n      >\n        {buttonName}\n      </AddButton>\n    );\n  } else {\n    return (\n      <ThemeProvider theme={theme}>\n        <p\n          style={style}\n          startIcon={startIcon}\n          size={size}\n          variant={variant}\n          color={color}\n          className={classDescription}\n          onClick={() => setShow(true)}\n        >\n          {buttonName}\n        </p>\n      </ThemeProvider>\n    );\n  }\n};\n\nconst ModalHeader = (props) => {\n  const { name } = props;\n  return (\n    <Modal.Header closeButton>\n      <Modal.Title>{name}</Modal.Title>\n    </Modal.Header>\n  );\n};\n\nconst ModalBody = (props) => {\n  const { bodyComponent, setShow } = props;\n\n  return (\n    <Modal.Body>\n      {React.cloneElement(bodyComponent, { setShow: setShow })}\n    </Modal.Body>\n  );\n};\n\nconst ModalFooter = (props) => {\n  const { setShow } = props;\n\n  return (\n    <Modal.Footer>\n      <Button\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        onClick={() => setShow(false)}\n      >\n        Close\n      </Button>\n    </Modal.Footer>\n  );\n};\n\nconst ModalWindow = (props) => {\n  const {\n    headerName,\n    buttonName,\n    bodyComponent,\n    classDescription,\n    size,\n    color,\n    variant,\n    startIcon,\n    theme,\n    name,\n    style,\n  } = props;\n  const [show, setShow] = useState(false);\n  return (\n    <>\n      <ModalButton\n        style={style}\n        name={name}\n        startIcon={startIcon}\n        setShow={setShow}\n        buttonName={buttonName}\n        size={size}\n        variant={variant}\n        color={color}\n        theme={theme}\n        classDescription={classDescription}\n      />\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        aria-labelledby=\"staticBackdropLabel\"\n      >\n        <ModalHeader name={headerName} />\n        <ModalBody bodyComponent={bodyComponent} setShow={setShow} />\n        <ModalFooter setShow={setShow} />\n      </Modal>\n    </>\n  );\n};\n\nexport default ModalWindow;\n"]},"metadata":{},"sourceType":"module"}