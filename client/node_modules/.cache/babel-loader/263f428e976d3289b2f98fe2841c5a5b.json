{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 1; i < 8; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }\n    }, moment().weekday([i]).format(\"dddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, weekdayNames)));\n}\n\nfunction TableRows(weeks) {\n  const w = weeks.map((week, i) => {\n    return console.log(\"week  \" + week);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, \"test\");\n}\n\nfunction TableBody() {\n  let dayCount = moment().daysInMonth();\n  let days = [];\n  let cal = [];\n\n  for (let index = 1; index < dayCount; index++) {\n    const day = /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, index, \": \", GetDayName(index));\n    days.push(day);\n    let c = {\n      [index]: GetDayName(index)\n    };\n    cal.push(c);\n  }\n\n  let startDay = moment().startOf(\"month\").day();\n  let endDay = moment().endOf(\"month\").day();\n  let w = moment().endOf(\"month\").week(); //   console.log(\"start week of month  \" + moment().startOf(\"month\").week());\n\n  console.log(\"end week \" + moment().endOf(\"week\").format()); //   console.log(\" week  \" + moment().date());\n\n  let week = new Array(7);\n  week[startDay] = moment().day(startDay).format(\"dddd\");\n  week[endDay] = moment().day(endDay).format(\"dddd\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, week, \" : \", startDay), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, week, \" : \", endDay));\n}\n\nfunction GetDayName(num) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, moment().date(num).format(\"dddd\"));\n}\n\nfunction DisplayMoment() {\n  var currMonthName = moment().format(\"MMMM\");\n  var prevMonthName = moment().subtract(1, \"month\").format(\"MMMM\");\n  let nextMonthName = moment().add(1, \"month\").format(\"MMMM\");\n  let dayCount = moment().daysInMonth();\n  let days = [];\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    const day = /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-info\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, index, \": \", GetDayName(index));\n    days.push(day);\n    let d = moment().date(index).day();\n\n    if (week[6] !== undefined) {\n      console.log(\"week6:   \" + week[6]);\n      weeks.push(week);\n      week = [];\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    } // console.log(\"week d: \" + week);\n\n  }\n\n  console.log(\"weeks: \" + weeks[0]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, prevMonthName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, currMonthName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, nextMonthName)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRows, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, days), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, moment().days()));\n}\n\nexport default DisplayMoment;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","moment","TableHead","weekdayNames","i","weekday","format","push","TableRows","weeks","w","map","week","console","log","TableBody","dayCount","daysInMonth","days","cal","index","day","GetDayName","c","startDay","startOf","endDay","endOf","Array","num","date","DisplayMoment","currMonthName","prevMonthName","subtract","nextMonthName","add","d","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 1; i < 8; i++) {\n    const weekday = <th key={i}>{moment().weekday([i]).format(\"dddd\")}</th>;\n    weekdayNames.push(weekday);\n  }\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>{weekdayNames}</tr>\n      </thead>\n    </table>\n  );\n}\n\nfunction TableRows(weeks) {\n  const w = weeks.map((week, i) => {\n    return console.log(\"week  \" + week);\n  });\n\n  return <div>test</div>;\n}\n\nfunction TableBody() {\n  let dayCount = moment().daysInMonth();\n  let days = [];\n  let cal = [];\n\n  for (let index = 1; index < dayCount; index++) {\n    const day = (\n      <button className=\"btn btn-outline-info\">\n        {index}: {GetDayName(index)}\n      </button>\n    );\n    days.push(day);\n    let c = {\n      [index]: GetDayName(index),\n    };\n    cal.push(c);\n  }\n\n  let startDay = moment().startOf(\"month\").day();\n  let endDay = moment().endOf(\"month\").day();\n  let w = moment().endOf(\"month\").week();\n\n  //   console.log(\"start week of month  \" + moment().startOf(\"month\").week());\n  console.log(\"end week \" + moment().endOf(\"week\").format());\n  //   console.log(\" week  \" + moment().date());\n\n  let week = new Array(7);\n  week[startDay] = moment().day(startDay).format(\"dddd\");\n  week[endDay] = moment().day(endDay).format(\"dddd\");\n\n  return (\n    <div>\n      <p>\n        {week} : {startDay}\n      </p>\n      <p>\n        {week} : {endDay}\n      </p>\n    </div>\n  );\n}\n\nfunction GetDayName(num) {\n  return <span>{moment().date(num).format(\"dddd\")}</span>;\n}\n\nfunction DisplayMoment() {\n  var currMonthName = moment().format(\"MMMM\");\n  var prevMonthName = moment().subtract(1, \"month\").format(\"MMMM\");\n  let nextMonthName = moment().add(1, \"month\").format(\"MMMM\");\n  let dayCount = moment().daysInMonth();\n  let days = [];\n\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    const day = (\n      <button className=\"btn btn-outline-info\" key={index}>\n        {index}: {GetDayName(index)}\n      </button>\n    );\n    days.push(day);\n\n    let d = moment().date(index).day();\n    if (week[6] !== undefined) {\n      console.log(\"week6:   \" + week[6]);\n      weeks.push(week);\n      week = [];\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n    // console.log(\"week d: \" + week);\n  }\n  console.log(\"weeks: \" + weeks[0]);\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-4\">{prevMonthName}</div>\n        <div className=\"col-4\">{currMonthName}</div>\n        <div className=\"col-4\">{nextMonthName}</div>\n      </div>\n      <div>\n        <TableHead />\n      </div>\n      <div>\n        {/* <TableBody /> */}\n        <TableRows />\n      </div>\n      <div>{days}</div>\n      <div>{moment().days()}</div>\n    </div>\n  );\n}\n\nexport default DisplayMoment;\n"]},"metadata":{},"sourceType":"module"}