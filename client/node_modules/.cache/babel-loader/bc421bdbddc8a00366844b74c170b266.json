{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const {\n    weeks\n  } = props;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    weeks: weeks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 0; i < 7; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, moment().weekday([i]).format(\"dddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, weekdayNames));\n} // function TableRows(props) {\n//   const { weeks } = props;\n//   const rows = weeks.map((week, i) => {\n//     week = Array.from(week, (item) => (typeof item === \"undefined\" ? 0 : item));\n//     const td = week.map((day, i) => {\n//       //   console.log(\"day: \" + day);\n//       return <td>{day}</td>;\n//     });\n//     return <tr>{td}</tr>;\n//   });\n//   //   console.log(\"rows\" + rows);\n//   return <tbody>{rows}</tbody>;\n// }\n\n\nfunction TableBody(props) {\n  const {\n    weeks\n  } = props;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, item => typeof item === \"undefined\" ? 0 : item);\n    const td = week.map((day, i) => {\n      //   console.log(\"day: \" + day);\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      }, day);\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, td);\n  }); //   console.log(\"rows\" + rows);\n\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, rows);\n}\n\nfunction GetDayName(num) {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, moment().date(num).format(\"dddd\"));\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).day();\n\n    if (week[6] !== undefined) {\n      weeks.push(week);\n      week = new Array(7);\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayMoment() {\n  let currMonthName = moment().format(\"MMMM\");\n  let prevMonthName = moment().subtract(1, \"month\").format(\"MMMM\");\n  let nextMonthName = moment().add(1, \"month\").format(\"MMMM\");\n  let prevMonth = moment().subtract(1, \"month\");\n  let nextMonth = moment().add(1, \"month\");\n  let weeks = GetWeeksOfMonth(prevMonth);\n  let days = [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, currMonthName)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    weeks: weeks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DisplayMoment;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","moment","Table","props","weeks","TableHead","weekdayNames","i","weekday","format","push","TableBody","rows","map","week","Array","from","item","td","day","GetDayName","num","date","GetWeeksOfMonth","month","dayCount","daysInMonth","index","d","undefined","DisplayMoment","currMonthName","prevMonthName","subtract","nextMonthName","add","prevMonth","nextMonth","days"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\n\nfunction Table(props) {\n  const { weeks } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHead />\n      <TableBody weeks={weeks} />\n    </table>\n  );\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n\n  for (let i = 0; i < 7; i++) {\n    const weekday = <th key={i}>{moment().weekday([i]).format(\"dddd\")}</th>;\n    weekdayNames.push(weekday);\n  }\n\n  return (\n    <thead>\n      <tr>{weekdayNames}</tr>\n    </thead>\n  );\n}\n\n// function TableRows(props) {\n//   const { weeks } = props;\n//   const rows = weeks.map((week, i) => {\n//     week = Array.from(week, (item) => (typeof item === \"undefined\" ? 0 : item));\n//     const td = week.map((day, i) => {\n//       //   console.log(\"day: \" + day);\n//       return <td>{day}</td>;\n//     });\n\n//     return <tr>{td}</tr>;\n//   });\n\n//   //   console.log(\"rows\" + rows);\n//   return <tbody>{rows}</tbody>;\n// }\n\nfunction TableBody(props) {\n  const { weeks } = props;\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, (item) => (typeof item === \"undefined\" ? 0 : item));\n    const td = week.map((day, i) => {\n      //   console.log(\"day: \" + day);\n      return <td>{day}</td>;\n    });\n\n    return <tr>{td}</tr>;\n  });\n\n  //   console.log(\"rows\" + rows);\n  return <tbody>{rows}</tbody>;\n}\n\nfunction GetDayName(num) {\n  return <span>{moment().date(num).format(\"dddd\")}</span>;\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).day();\n    if (week[6] !== undefined) {\n      weeks.push(week);\n      week = new Array(7);\n      week[d] = index;\n    } else {\n      week[d] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayMoment() {\n  let currMonthName = moment().format(\"MMMM\");\n  let prevMonthName = moment().subtract(1, \"month\").format(\"MMMM\");\n  let nextMonthName = moment().add(1, \"month\").format(\"MMMM\");\n\n  let prevMonth = moment().subtract(1, \"month\");\n  let nextMonth = moment().add(1, \"month\");\n\n  let weeks = GetWeeksOfMonth(prevMonth);\n\n  let days = [];\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {/* <div className=\"col-4\">{prevMonthName}</div> */}\n        <div className=\"col-4\">{currMonthName}</div>\n        {/* <div className=\"col-4\">{nextMonthName}</div> */}\n      </div>\n      <div>\n        <Table weeks={weeks} />\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayMoment;\n"]},"metadata":{},"sourceType":"module"}