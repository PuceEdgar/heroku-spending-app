{"ast":null,"code":"var _jsxFileName = \"/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { GetTotal } from \"../Utilities/Total\";\nimport ModalWindow from \"../Components/ModalWindow\";\n\nfunction DayTable(props) {\n  const {\n    items\n  } = props;\n  const tableRows = items.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, item.type), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, item.place), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, item.amount));\n  });\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Place\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, tableRows));\n}\n\nfunction Table(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    weeks: weeks,\n    items: items,\n    selectedMonth: selectedMonth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n  const weekNumber = /*#__PURE__*/React.createElement(\"th\", {\n    className: \"align-middle text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }\n  }, \"Week\");\n  weekdayNames[7] = weekNumber;\n\n  for (let i = 1; i <= 7; i++) {\n    const weekday = /*#__PURE__*/React.createElement(\"th\", {\n      key: i,\n      className: \"align-middle text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, moment().isoWeekday([i]).format(\"ddd\"));\n    weekdayNames.push(weekday);\n  }\n\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, weekdayNames));\n}\n\nfunction TableBody(props) {\n  const {\n    weeks,\n    items,\n    selectedMonth\n  } = props;\n  const spendingMonth = items.filter((item, i) => {\n    return new Date(item.date).getMonth() === selectedMonth.month();\n  });\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, item => typeof item === \"undefined\" ? \"\" : item);\n    const td = week.map((day, i) => {\n      const daySpending = spendingMonth.filter((item, i) => {\n        return moment(item.date).date() === day;\n      });\n      const totalPerDay = GetTotal(daySpending);\n\n      if (totalPerDay > 0) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"align-middle text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(ModalWindow, {\n          buttonName: day,\n          headerName: `Total spent: ${totalPerDay}`,\n          classDescription: \"btn btn-warning btn-block text-dark\",\n          bodyComponent: /*#__PURE__*/React.createElement(DayTable, {\n            items: daySpending,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 30\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"align-middle text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 16\n          }\n        }, day);\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, td);\n  });\n  return /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  }, rows);\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  // const { items } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n  const [items, setItems] = useState([]);\n\n  function getData() {\n    fetch(\"http://localhost:9000/getitems\").then(res => res.json()).then(res => {\n      const sortedActivities = res.sort((a, b) => new Date(b.date) - new Date(a.date));\n      setItems(sortedActivities);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row container m-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadPreviousMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, selectedMonth.format(\"MMMM\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-3 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-info\",\n    onClick: () => loadNextMonth(selectedMonth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"Next\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    weeks: weeks,\n    selectedMonth: selectedMonth,\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default DisplayCalendar;","map":{"version":3,"sources":["/Users/edgarspuce/React/spending-tool/src/OldVersion/Components/Calendar.js"],"names":["React","useState","useEffect","moment","GetTotal","ModalWindow","DayTable","props","items","tableRows","map","item","i","type","place","amount","Table","weeks","selectedMonth","TableHead","weekdayNames","weekNumber","weekday","isoWeekday","format","push","TableBody","spendingMonth","filter","Date","date","getMonth","month","rows","week","Array","from","td","day","daySpending","totalPerDay","GetWeeksOfMonth","dayCount","daysInMonth","index","d","undefined","DisplayCalendar","setMonth","setWeeks","setItems","getData","fetch","then","res","json","sortedActivities","sort","a","b","loadNextMonth","nextMonth","add","loadPreviousMonth","previousMonth","subtract"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { GetTotal } from \"../Utilities/Total\";\nimport ModalWindow from \"../Components/ModalWindow\";\n\nfunction DayTable(props) {\n  const { items } = props;\n\n  const tableRows = items.map((item, i) => {\n    return (\n      <tr key={i}>\n        <td>{item.type}</td>\n        <td>{item.place}</td>\n        {/* <td>{item.date}</td> */}\n        <td>{item.amount}</td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Type</th>\n          <th scope=\"col\">Place</th>\n          {/* <th scope=\"col\">Date</th> */}\n          <th scope=\"col\">Amount</th>\n        </tr>\n      </thead>\n      <tbody>{tableRows}</tbody>\n    </table>\n  );\n}\n\nfunction Table(props) {\n  const { weeks, items, selectedMonth } = props;\n\n  return (\n    <table className=\"table\">\n      <TableHead />\n      <TableBody weeks={weeks} items={items} selectedMonth={selectedMonth} />\n    </table>\n  );\n}\n\nfunction TableHead() {\n  const weekdayNames = [];\n  const weekNumber = <th className=\"align-middle text-center\">Week</th>;\n  weekdayNames[7] = weekNumber;\n  for (let i = 1; i <= 7; i++) {\n    const weekday = (\n      <th key={i} className=\"align-middle text-center\">\n        {moment().isoWeekday([i]).format(\"ddd\")}\n      </th>\n    );\n    weekdayNames.push(weekday);\n  }\n\n  return (\n    <thead>\n      <tr>{weekdayNames}</tr>\n    </thead>\n  );\n}\n\nfunction TableBody(props) {\n  const { weeks, items, selectedMonth } = props;\n\n  const spendingMonth = items.filter((item, i) => {\n    return new Date(item.date).getMonth() === selectedMonth.month();\n  });\n\n  const rows = weeks.map((week, i) => {\n    week = Array.from(week, (item) =>\n      typeof item === \"undefined\" ? \"\" : item\n    );\n    const td = week.map((day, i) => {\n      const daySpending = spendingMonth.filter((item, i) => {\n        return moment(item.date).date() === day;\n      });\n      const totalPerDay = GetTotal(daySpending);\n\n      if (totalPerDay > 0) {\n        return (\n          <td className=\"align-middle text-center\">\n            <ModalWindow\n              buttonName={day}\n              headerName={`Total spent: ${totalPerDay}`}\n              classDescription=\"btn btn-warning btn-block text-dark\"\n              bodyComponent={<DayTable items={daySpending} />}\n            />\n          </td>\n        );\n      } else {\n        return <td className=\"align-middle text-center\">{day}</td>;\n      }\n    });\n\n    return <tr>{td}</tr>;\n  });\n\n  return <tbody>{rows}</tbody>;\n}\n\nfunction GetWeeksOfMonth(month) {\n  let dayCount = month.daysInMonth();\n  let weeks = [];\n  let week = new Array(7);\n  for (let index = 1; index <= dayCount; index++) {\n    let d = month.date(index).isoWeekday();\n\n    if (week[6] !== undefined) {\n      // let w = month.date(index).isoWeek();\n      // console.log(\"week nr  \" + w);\n      weeks.push(week);\n      week = new Array(7);\n      week[d - 1] = index;\n    } else {\n      week[d - 1] = index;\n    }\n\n    if (index === dayCount) {\n      weeks.push(week);\n    }\n  }\n\n  return weeks;\n}\n\nfunction DisplayCalendar(props) {\n  // const { items } = props;\n  const [selectedMonth, setMonth] = useState(moment());\n  const [weeks, setWeeks] = useState(GetWeeksOfMonth(selectedMonth));\n  const [items, setItems] = useState([]);\n\n  function getData() {\n    fetch(\"http://localhost:9000/getitems\")\n      .then((res) => res.json())\n      .then((res) => {\n        const sortedActivities = res.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        setItems(sortedActivities);\n      });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function loadNextMonth(props) {\n    let nextMonth = props.add(1, \"month\");\n\n    setMonth(nextMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  function loadPreviousMonth(props) {\n    let previousMonth = props.subtract(1, \"month\");\n\n    setMonth(previousMonth);\n    setWeeks(GetWeeksOfMonth(selectedMonth));\n  }\n\n  return (\n    <div className=\"container border\">\n      <div className=\"row container m-3\">\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadPreviousMonth(selectedMonth)}\n          >\n            Previous\n          </button>\n        </div>\n        <div className=\"col-6 text-center\">\n          <h4 className=\"text-middle\">{selectedMonth.format(\"MMMM\")}</h4>\n        </div>\n        <div className=\"col-3 text-center\">\n          <button\n            className=\"btn btn-outline-info\"\n            onClick={() => loadNextMonth(selectedMonth)}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n      <div>\n        <Table weeks={weeks} selectedMonth={selectedMonth} items={items} />\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayCalendar;\n"]},"metadata":{},"sourceType":"module"}